#!/bin/bash


if [ $# -lt 1 ]
then
        echo "
  Script to run several rkHunter tasks on Host.
  If no 2nd parameter is NOT provided, it will try to
  use mCollective to find all hosts in the puppet.

  Usage : $0 show|check|updatedb|updatedball [\"host1 host2 hostN\"]

  show        : show last rkHunter check result
  check       : runn check again
  updatedb    : update rkHunter DB if required
  updatedball : update rkHunter DB on all given/found hosts

  "
        exit 0
fi

if [ $# -lt 2 ]
then
  HOSTLIST=`mco find`
  if [ $? -gt 0 ]
  then
    echo "ERROR: no mCollective found or mco is not in the PATH"
    exit 1;
  fi
else
  HOSTLIST=$2
fi

run_show ()
{
  echo "SHOW LAST RKHUNTER CHECKRESULT"
  echo

  for i in $HOSTLIST; do
    ssh $i "
      if [ -s /var/log/rkhunter_warnings.log ] ; then
        echo \"-----------------------------------------------------\"
        echo \"Updating $i\" ;
        cat /var/log/rkhunter_warnings.log;
      fi"
  done
}

run_check ()
{
  echo "RUN RKUNTER CHECK"
  echo

  for i in $HOSTLIST; do
    echo "-----------------------------------------------------"
    echo "$i"
    echo
    ssh $i "rkhunter --cronjob --rwo > /var/log/rkhunter_warnings.log" ;
  done
}

run_propupdall ()
{
  echo "RUN RKUNTER UPDATEDB ON ALL HOSTS"
  echo

  for i in $HOSTLIST; do
    echo "-----------------------------------------------------"
    echo "$i"
    echo
    ssh $i "rkhunter --propupd; rkhunter --cronjob --rwo > /var/log/rkhunter_warnings.log" ;
  done
}


run_propupd ()
{
  echo "RUN RKUNTER UPDATEDB ONLY ON HOSTS WHITCH NEED IT"
  echo

  for i in $HOSTLIST; do
    ssh $i "
      if [ -s /var/log/rkhunter_warnings.log ] ; then
  echo \"-----------------------------------------------------\"
  echo \"Updating $i\" ;
        rkhunter --propupd; rkhunter --cronjob --rwo > /var/log/rkhunter_warnings.log
      fi"
  done
}

case "$1" in
  show)
    run_show
    ;;
  check)
    run_check
    ;;
  updatedb)
    run_propupd
esac

exit 0
